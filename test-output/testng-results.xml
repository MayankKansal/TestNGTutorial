<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="2" total="13" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="Test Suite" duration-ms="266" started-at="2022-03-08T14:57:29Z" finished-at="2022-03-08T14:57:30Z">
    <groups>
      <group name="regression">
        <method signature="FourthClass.CarloanApproved()[pri:0, instance:test.FourthClass@6acdbdf5]" name="CarloanApproved" class="test.FourthClass"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="FourthClass.EduloanApproved()[pri:0, instance:test.FourthClass@6acdbdf5]" name="EduloanApproved" class="test.FourthClass"/>
        <method signature="FourthClass.CarloanApproved()[pri:0, instance:test.FourthClass@6acdbdf5]" name="CarloanApproved" class="test.FourthClass"/>
        <method signature="ThirdClass.Eduloan()[pri:0, instance:test.ThirdClass@4b1c1ea0]" name="Eduloan" class="test.ThirdClass"/>
      </group> <!-- smoke -->
    </groups>
    <test name="Rest" duration-ms="92" started-at="2022-03-08T14:57:29Z" finished-at="2022-03-08T14:57:29Z">
      <class name="test.FirstClass">
        <test-method status="FAIL" signature="FCmethod()[pri:0, instance:test.FirstClass@a7e666]" name="FCmethod" duration-ms="13" started-at="2022-03-08T14:57:29Z" finished-at="2022-03-08T14:57:29Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at test.FirstClass.FCmethod(FirstClass.java:14)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FCmethod -->
        <test-method status="PASS" signature="FCmethod1(java.lang.String, java.lang.String)[pri:0, instance:test.FirstClass@a7e666]" name="FCmethod1" duration-ms="2" started-at="2022-03-08T14:57:29Z" data-provider="check" finished-at="2022-03-08T14:57:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FCmethod1 -->
        <test-method status="PASS" signature="FCmethod1(java.lang.String, java.lang.String)[pri:0, instance:test.FirstClass@a7e666]" name="FCmethod1" duration-ms="2" started-at="2022-03-08T14:57:29Z" data-provider="check" finished-at="2022-03-08T14:57:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Secondusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SecondPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FCmethod1 -->
        <test-method status="PASS" signature="FCmethod1(java.lang.String, java.lang.String)[pri:0, instance:test.FirstClass@a7e666]" name="FCmethod1" duration-ms="2" started-at="2022-03-08T14:57:29Z" data-provider="check" finished-at="2022-03-08T14:57:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Thirdusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ThirdPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FCmethod1 -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:test.FirstClass@a7e666]" name="closeBrowser" is-config="true" duration-ms="1" started-at="2022-03-08T14:57:29Z" finished-at="2022-03-08T14:57:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- test.FirstClass -->
      <class name="test.SecondClass">
        <test-method status="PASS" signature="SCmethod(java.lang.String)[pri:0, instance:test.SecondClass@68bbe345]" name="SCmethod" duration-ms="2" started-at="2022-03-08T14:57:29Z" finished-at="2022-03-08T14:57:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Suite.url.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SCmethod -->
      </class> <!-- test.SecondClass -->
    </test> <!-- Rest -->
    <test name="loan" duration-ms="38" started-at="2022-03-08T14:57:29Z" finished-at="2022-03-08T14:57:30Z">
      <class name="test.ThirdClass">
        <test-method status="PASS" signature="beforeClassMethod()[pri:0, instance:test.ThirdClass@4b1c1ea0]" name="beforeClassMethod" is-config="true" duration-ms="1" started-at="2022-03-08T14:57:29Z" finished-at="2022-03-08T14:57:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method status="PASS" signature="Carloan()[pri:0, instance:test.ThirdClass@4b1c1ea0]" name="Carloan" duration-ms="2" started-at="2022-03-08T14:57:30Z" finished-at="2022-03-08T14:57:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Carloan -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.ThirdClass@4b1c1ea0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-03-08T14:57:30Z" finished-at="2022-03-08T14:57:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:test.ThirdClass@4b1c1ea0]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2022-03-08T14:57:30Z" finished-at="2022-03-08T14:57:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Eduloan()[pri:0, instance:test.ThirdClass@4b1c1ea0]" name="Eduloan" duration-ms="1" started-at="2022-03-08T14:57:30Z" finished-at="2022-03-08T14:57:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Eduloan -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.ThirdClass@4b1c1ea0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-03-08T14:57:30Z" finished-at="2022-03-08T14:57:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:test.ThirdClass@4b1c1ea0]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2022-03-08T14:57:30Z" finished-at="2022-03-08T14:57:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Homeloan(java.lang.String)[pri:0, instance:test.ThirdClass@4b1c1ea0]" name="Homeloan" duration-ms="1" started-at="2022-03-08T14:57:30Z" finished-at="2022-03-08T14:57:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[UrlFromTestTagWhileSuiteHasItsOwnUrl.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Homeloan -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.ThirdClass@4b1c1ea0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-03-08T14:57:30Z" finished-at="2022-03-08T14:57:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:test.ThirdClass@4b1c1ea0]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2022-03-08T14:57:30Z" finished-at="2022-03-08T14:57:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="aeforeClassMethod()[pri:0, instance:test.ThirdClass@4b1c1ea0]" name="aeforeClassMethod" is-config="true" duration-ms="0" started-at="2022-03-08T14:57:30Z" finished-at="2022-03-08T14:57:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aeforeClassMethod -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:test.ThirdClass@4b1c1ea0]" name="afterSuite" is-config="true" duration-ms="1" started-at="2022-03-08T14:57:30Z" finished-at="2022-03-08T14:57:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- test.ThirdClass -->
      <class name="test.FourthClass">
        <test-method status="PASS" signature="BeforeSuite()[pri:0, instance:test.FourthClass@6acdbdf5]" name="BeforeSuite" is-config="true" duration-ms="34" started-at="2022-03-08T14:57:29Z" finished-at="2022-03-08T14:57:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeSuite -->
        <test-method status="PASS" signature="ClearCookies()[pri:0, instance:test.FourthClass@6acdbdf5]" name="ClearCookies" is-config="true" duration-ms="0" started-at="2022-03-08T14:57:29Z" finished-at="2022-03-08T14:57:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearCookies -->
        <test-method status="PASS" signature="EduloanApproved()[pri:0, instance:test.FourthClass@6acdbdf5]" name="EduloanApproved" duration-ms="7" started-at="2022-03-08T14:57:30Z" finished-at="2022-03-08T14:57:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EduloanApproved -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:test.FourthClass@6acdbdf5]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2022-03-08T14:57:30Z" finished-at="2022-03-08T14:57:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="HomeloanApproved()[pri:0, instance:test.FourthClass@6acdbdf5]" name="HomeloanApproved" duration-ms="2" started-at="2022-03-08T14:57:30Z" finished-at="2022-03-08T14:57:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HomeloanApproved -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:test.FourthClass@6acdbdf5]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2022-03-08T14:57:30Z" finished-at="2022-03-08T14:57:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="CarloanApproved()[pri:0, instance:test.FourthClass@6acdbdf5]" name="CarloanApproved" duration-ms="1" started-at="2022-03-08T14:57:30Z" depends-on-methods="test.FourthClass.EduloanApproved" finished-at="2022-03-08T14:57:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CarloanApproved -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:test.FourthClass@6acdbdf5]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2022-03-08T14:57:30Z" finished-at="2022-03-08T14:57:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
      </class> <!-- test.FourthClass -->
    </test> <!-- loan -->
  </suite> <!-- Test Suite -->
</testng-results>
